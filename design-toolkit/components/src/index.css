/*
 * Copyright 2025 Hypergiant Galactic Systems Inc. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

/* @import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..700;1,100..700&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap'); */
@import '@fontsource/roboto-flex';
@import '@fontsource/roboto-mono';
@import 'tailwindcss';

/* Import generated themes.css */
@import './tokens/themes.css';

@theme {
  --color-current: currentColor;
}

/** Recreating https://github.com/adobe/react-spectrum/blob/main/packages/tailwindcss-react-aria-components/src/index.js without RAC selectors (:where([data-rac])) or prefix and combining with native selectors **/
@custom-variant placement-left (&[data-placement~="left"]);
@custom-variant placement-right (&[data-placement~="right"]);
@custom-variant placement-top (&[data-placement~="top"]);
@custom-variant placement-bottom (&[data-placement~="bottom"]);

@custom-variant size-xlarge (&[data-size="xlarge"]);
@custom-variant size-large (&[data-size="large"]);
@custom-variant size-medium (&[data-size="medium"]);
@custom-variant size-small (&[data-size="small"]);
@custom-variant size-xsmall (&[data-size="xsmall"]);

@custom-variant type-literal (&[data-type="literal"]);
@custom-variant type-year (&[data-type="year"]);
@custom-variant type-month (&[data-type="month"]);
@custom-variant type-day (&[data-type="day"]);

@custom-variant layout-grid (&[data-layout="grid"]);
@custom-variant layout-stack (&[data-layout="stack"]);

@custom-variant orientation-horizontal (&[data-orientation="horizontal"]);
@custom-variant orientation-vertical (&[data-orientation="vertical"]);

@custom-variant selection-single (&[data-selection-mode="single"]);
@custom-variant selection-multiple (&[data-selection-mode="multiple"]);

@custom-variant resizable-right (&[data-resizable-direction="right"]);
@custom-variant resizable-left (&[data-resizable-direction="left"]);
@custom-variant resizable-both (&[data-resizable-direction="both"]);

@custom-variant sort-ascending (&[data-sort-direction="ascending"]);
@custom-variant sort-descending (&[data-sort-direction="descending"]);

@custom-variant allows-removing (&[data-allows-removing]);
@custom-variant allows-sorting (&[data-allows-sorting]);
@custom-variant allows-dragging (&[data-allows-dragging]);

@custom-variant has-submenu (&[data-has-submenu]);
@custom-variant has-child-items (&[data-has-child-items]);

@custom-variant open (&:is([open], [data-open]), &:open);
@custom-variant expanded (&:is([expanded], [data-expanded]));

@custom-variant entering (&[data-entering]);
@custom-variant exiting (&[data-exiting]);

@custom-variant indeterminate (&[data-indeterminate], &:indeterminate);

@custom-variant placeholder-shown (&[data-placeholder], &:placeholder-shown);

@custom-variant current (&[data-current]);

@custom-variant optional (&:not([required], [data-required]), &:optional);
@custom-variant required (&:is([required], [data-required]), &:required);

@custom-variant unavailable (&[data-unavailable]);

@custom-variant invalid (&:is([invalid], [data-invalid]), &:invalid);

@custom-variant read-only (&:is([readonly], [data-readonly]), &:read-only);

@custom-variant outside-month (&[data-outside-month]);
@custom-variant outside-visible-range (&[data-outside-visible-range]);

@custom-variant pending (&[data-pending]);

@custom-variant empty (&[data-empty], &:empty);

@custom-variant focus-within (&[data-focus-within], &:focus-within);

@custom-variant hover (&[data-hovered], &:hover);

@custom-variant focus (&[data-focused], &:focus);
@custom-variant focus-visible (&[data-focus-visible], &:focus-visible);

@custom-variant pressed (&[data-pressed], &:active);

@custom-variant selected (&[data-selected], &:checked);
@custom-variant selection-start (&[data-selection-start]);
@custom-variant selection-end (&[data-selection-end]);

@custom-variant dragging (&[data-dragging]);
@custom-variant drop-target (&[data-drop-target]);

@custom-variant resizing (&[data-resizing]);

@custom-variant enabled (&:not([disabled], [data-disabled]), &:enabled);
@custom-variant disabled (&:is([disabled], [data-disabled]), &:disabled);

@utility outline {
  outline-offset: -1px;
}

@utility text-header-xxl {
  font-size: var(--typography-header-xxl-size);
  font-weight: 500;
  letter-spacing: var(--typography-header-xxl-spacing);
  line-height: var(--typography-header-xxl-height);
}

@utility text-header-xl {
  font-size: var(--typography-header-xl-size);
  font-weight: 500;
  letter-spacing: var(--typography-header-xl-spacing);
  line-height: var(--typography-header-xl-height);
}

@utility text-header-l {
  font-size: var(--typography-header-l-size);
  font-weight: 500;
  letter-spacing: var(--typography-header-l-spacing);
  line-height: var(--typography-header-l-height);
}

@utility text-header-m {
  font-size: var(--typography-header-m-size);
  font-weight: 500;
  letter-spacing: var(--typography-header-m-spacing);
  line-height: var(--typography-header-m-height);
}

@utility text-header-s {
  font-size: var(--typography-header-s-size);
  font-weight: 500;
  letter-spacing: var(--typography-header-s-spacing);
  line-height: var(--typography-header-s-height);
}

@utility text-header-xs {
  font-size: var(--typography-header-xs-size);
  font-weight: 500;
  letter-spacing: var(--typography-header-xs-spacing);
  line-height: var(--typography-header-xs-height);
}

@utility text-body-l {
  font-size: var(--typography-body-l-size);
  font-weight: 400;
  letter-spacing: var(--typography-body-l-spacing);
  line-height: var(--typography-body-l-height);
}

@utility text-body-m {
  font-size: var(--typography-body-m-size);
  font-weight: 400;
  letter-spacing: var(--typography-body-m-spacing);
  line-height: var(--typography-body-m-height);
}

@utility text-body-s {
  font-size: var(--typography-body-s-size);
  font-weight: 400;
  letter-spacing: var(--typography-body-s-spacing);
  line-height: var(--typography-body-s-height);
}

@utility text-body-xs {
  font-size: var(--typography-body-xs-size);
  font-weight: 400;
  letter-spacing: var(--typography-body-xs-spacing);
  line-height: var(--typography-body-xs-height);
}

@utility text-body-xxs {
  font-size: var(--typography-body-xxs-size);
  font-weight: 400;
  letter-spacing: var(--typography-body-xxs-spacing);
  line-height: var(--typography-body-xxs-height);
}

@utility text-button-l {
  font-size: var(--typography-button-l-size);
  font-weight: bold;
  letter-spacing: var(--typography-button-l-spacing);
  line-height: var(--typography-button-l-height);
}

@utility text-button-m {
  font-size: var(--typography-button-m-size);
  font-weight: bold;
  letter-spacing: var(--typography-button-m-spacing);
  line-height: var(--typography-button-m-height);
}

@utility text-button-s {
  font-size: var(--typography-button-s-size);
  font-weight: bold;
  letter-spacing: var(--typography-button-s-spacing);
  line-height: var(--typography-button-s-height);
}

@utility text-button-xs {
  font-size: var(--typography-button-xs-size);
  font-weight: bold;
  letter-spacing: var(--typography-button-xs-spacing);
  line-height: var(--typography-button-xs-height);
}

@utility w-content {
  width: fit-content;
}

@utility h-content {
  height: fit-content;
}

@utility w-* {
  width: --value([ *]);
}

@utility icon-* {
  --icon-color: --value([ *]);
  --icon-color: --value(--color- *);
}

@utility fg-* {
  color: --value([ *]);
  color: --value(--color- *);
  --icon-color: --value([ *]);
  --icon-color: --value(--color- *);
}

body {
  @apply font-primary;
}

@layer components {
  .hide-cancel::-webkit-search-cancel-button {
    display: none;
  }

  /**
   * Rule line only applicable to the QueryBuilder component
   */
  .queryBuilder .rule-lines::before {
    content: '';
    width: 10px;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 50%;
    background-image:
      repeating-linear-gradient(to bottom, var(--colors-neutral-04), var(--colors-neutral-04)),
      repeating-linear-gradient(to right, var(--colors-neutral-04), var(--colors-neutral-04));
    background-position: left -1px, center;
    background-repeat: repeat-y, repeat-x;
    background-size: 1px 4px, 4px 1px;
  }

  .queryBuilder .group > span.rule-lines:last-of-type::before {
    content: '';
    width: 10px;
    position: absolute;
    top: 0;
    bottom: 50%;
    left: 50%;
    background-image:
      repeating-linear-gradient(to bottom,var(--colors-neutral-04), var(--colors-neutral-04)),
      repeating-linear-gradient(to right, var(--colors-neutral-04), var(--colors-neutral-04));
    background-position: left -1px, bottom;
    background-repeat: repeat-y, repeat-x;
    background-size: 1px 4px, 4px 1px;
  }

  .queryBuilder .group > span.rule-lines:last-of-type:has(~ div.group)::before {
    content: '';
    width: 10px;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 50%;
    background-image:
      repeating-linear-gradient(to bottom, var(--colors-neutral-04), var(--colors-neutral-04)),
      repeating-linear-gradient(to right, var(--colors-neutral-04), var(--colors-neutral-04));
    background-position: left -1px, center;
    background-repeat: repeat-y, repeat-x;
    background-size: 1px 4px, 4px 1px;
  }
}
