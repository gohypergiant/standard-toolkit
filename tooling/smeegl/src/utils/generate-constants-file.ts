/*
 * Copyright 2025 Hypergiant Galactic Systems Inc. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

import { writeFile } from 'node:fs/promises';
import { Result } from 'true-myth';
import type {
  GenerateConstantsResult,
  GenerateSpritesResult,
} from './types.js';

const GENERATED_FILE_HEADER = `/**
 * THIS IS A GENERATED FILE. DO NOT ALTER DIRECTLY.
 * Generated by smeegl.
 */\n\n`;

const toCapitalCase = (str: string): string =>
  str.toUpperCase().replaceAll('-', '_');

const toExportedConstant = (spriteName: string, filename: string): string =>
  `export const ${toCapitalCase(spriteName)} = '${filename}'`;

export async function generateConstantsFile(
  generateSpritesResult: GenerateSpritesResult,
): Promise<GenerateConstantsResult> {
  if (generateSpritesResult.isErr) {
    return Result.err(generateSpritesResult.error);
  }

  try {
    const { json, tmp, sprites } = generateSpritesResult.unwrapOr({
      tmp: '',
      json: '',
      sprites: [],
    });

    const exportedConstantDefinitionList = sprites
      .map((sprite) => toExportedConstant(sprite.name, sprite.indexName))
      .sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));
    const constantsFileContent = exportedConstantDefinitionList.join('\n');

    const fileName = json.replace('.json', '.ts');
    const fileContent = `${GENERATED_FILE_HEADER}${constantsFileContent}`;
    await writeFile(fileName, fileContent);

    return Result.ok({ tmp });
  } catch (err) {
    const { tmp } = generateSpritesResult.unwrapOr({ tmp: '' });

    return Result.err({ msg: (err as Error).message.trim(), tmp });
  }
}
